"""
继承描述类与类之间的关系，可以不重写类，而对原有类的功能进行扩展。如冰箱类，有容量、颜色、功耗等属性，有开门、装东西、关门、制冷等行为。各品牌的冰箱除拥有这些功能外，又有各自的型号、特点等。再例如学生类，有学号、姓名、性别、年龄等属性，有上课、学习、活动等方法。大学生则又可以增加如学院、专业、选修、社团、实习等新属性和方法。
同一类的事物之间存在着各种关系，其中这种从属关系，我们称为继承。所有小学生都是学生，但不是所有的学生都是小学生。从高层级到低层级是由一个抽象到具体的过程，从低层级到高层级是一个由具体到抽象的过程。
个类可以继承自另一个类，并自动拥有另一个类的属性和方法，还可以添加自己新的特性和方法。继承类称为子类，被继承的类称为父类或超类。子类定义格式如下：
 class子类名(父类名):
子类不能继承父类的私有属性和方法，但能自动拥有父类其他的属性和方法。如果子类对父类提供的属性和方法进行修改，叫重写。如果子类重新定义了父类方法后，还需要访问父类的同名方法，可以使用super关键字，代码如下：
"""
class Fridge:
    def __init__(self):
        print("这是一类冰箱")
    def pack(self, goods):
        self.goods = goods
        print("冰箱里装入了%s"%self.goods)

class Double_Door(Fridge):
    def __init__(self): #重写父类的构造方法
        super().__init__() #调用父类的构造方法
        print("这是一种双开门冰箱")
fridge = Double_Door()
fridge.pack("苹果")   #继承父类的方法

"""
运行结果如下：
这是一类冰箱
这是一种双开门冰箱
冰箱里装入了苹果
"""