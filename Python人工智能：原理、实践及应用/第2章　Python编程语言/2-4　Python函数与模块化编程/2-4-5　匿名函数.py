"""
匿名函数是一类无须定义标识符的函数，它与普通函数一样可以在程序的任何位置使用，但是在定义时被严格限定为单一表达式。Python中使用关键字lambda来定义匿名函数。语法格式如下：
函数名 = lambda参数列表:表达式
这个语句等价于如下正常函数的定义：
def函数名(参数列表):
    return表达式
与普通的函数相比，lambda函数的体积更小、功能单一，用于定义简单的、能在一行内表示的函数，返回一个函数类型。
与普通函数的区别：
（1）普通函数在定义时有名称，而lambda函数没有。
（2）普通函数的函数体中可以包含多条语句，而lambda函数只能是一个表达式。
（3）普通函数可以实现比较复杂的功能，而lambda函数功能简单。
（4）普通函数能被其他程序调用，而lambda函数不能被其他程序调用，经常用一个变量来保存它，以便后期可以随时使用这个函数。
当匿名函数用变量来保存时，这个变量可以作为匿名函数的临时名称来调用。示例代码如下：
"""
f = lambda x, y: x + y
print(f(1, 2))  # 3

temp = lambda x : pow(x, 2)
print(temp(5))  # 25

"""
lambda函数经常会用在多维列表的排序中。如对二维列表按第二列排序分别升序、降序排序，示例代码如下：
"""
list1 = [[1, 200], [3, 40], [5, 6], [7, 8000]]
list1.sort(key=lambda x: x[1])  # 按第二列升序排序
print(list1)  # [[5, 6], [3, 40], [1, 200], [7, 8000]]
list1.sort(key=lambda x: x[1], reverse=True)  # 按第二列降序排序
print(list1)  # [[7, 8000], [1, 200], [3, 40], [5, 6]]