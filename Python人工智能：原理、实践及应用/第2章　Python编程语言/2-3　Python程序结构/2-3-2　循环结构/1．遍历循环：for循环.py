"""
Python的循环结构分为for循环和while循环两种。
其中for循环确定循环次数，称为“遍历循环”，循环次数采用遍历结构中的元素个数来体现。
while循环不确定循环次数，称为“无限循环”，不能明确循环体可能的执行次数，而是通过条件判断是否继续执行循环体。
"""
# 1．遍历循环：for循环
"""
遍历循环是逐一访问目标中的数据，例如逐个访问字符串的字符、逐个访问列表中的元素等。Python一般使用保留字for遍历循环，语法格式如下：
for <循环变量> in <遍历结构>:
    <语句块>
for语句中的循环执行次数是根据遍历结构中元素个数来确定的，遍历循环可以理解成从遍历结构中逐一提取元素，放在循环变量中，对于所提取的每个元素执行一次 语句块 。
遍历结构 可以是字符串、文件、组合数据类型或range（）函数等。
循环变量 用于保存本次循环访问的遍历结构中的元素。
"""
# 1）遍历元素
'''
使用for循环遍历字符串、列表等组合类型。代码如下：
'''
# 遍历字符串
s = 'ABCD'
for c in s:
    print(c, end=' ')   # A B C D
print()
# 2）range（）函数
'''
range（）函数可以创建一个整数列表，range（）函数的语法格式如下：
range([start,] stop [,step])
函数说明如下。
start：表示列表的起始位置，该参数可以缺省，缺省则表示列表默认从0开始。
stop：表示列表的结束位置，开区间，即不包含stop的值，如range（6），range（0，6）表示结束的值为5，即产生的列表为[0，1，2，3，4，5]。
step：表示列表中元素的增幅，该参数可以缺省，缺省则表示元素默认步长为1，如range（0，6）相当于range（0，6，1）。
range（）函数一般与for循环搭配使用，以控制for循环中代码段的执行次数。例如对上面的字符串、列表的遍历也可以由range（）函数来控制，range（）函数的结束值为字符串、列表的长度。相应的代码修改如下：
'''
s = 'ABCD'
for i in range(0,len(s),1):
    print(s[i], end=' ')    # A B C D
print()
"""
【例2-12】　计算1～100的累加之和。
案例分析：要计算1～100的累加之和，可以使用循环语句，将1～100这之间的数字逐一取出并进行累加。
可以使用for-range（）搭配，循环次数为100次，起始值为1，结束值为100。
"""
sum = 0
for i in range(1,101,1):
    sum += i
print(sum)  # 5050

# 3）for-else
"""
for循环还能与保留字else搭配使用，for-else的语法结构如下：
for <循环变量> in <遍历结构>:
    <语句块1>
else:
    <语句块2>
else后的 语句块2 只有在循环正常执行完成之后才执行。因此可以在 语句块2 中放置判断循环执行情况的语句。如下列代码所示：
"""
for c in 'ABC':
    print('循环进行中:'+c)
else:
    print('循环正常结束:')