# 2．无限循环：while循环
"""
很多应用无法在执行之初确定遍历次数，这就需要编程语言提供根据条件进行循环的语法，这种循环称为无限循环，也称为条件循环。无限循环一直保持循环操作直到循环条件不满足才结束，不需要提前知道循环次数。
Python通过保留字while实现无限循环，语法格式如下：
while <条件>:
    <语句块>
条件 与if语句中的判断条件一样，结果为True或False。
当程序执行到while语句时，若 条件 的结果为True，则执行 语句块 中的内容， 语句块 执行完之后再回到while语句进行判断，如此往复，直到循环 条件 的结果为False，则终止循环，执行while循环结构之后的语句。
如例2-12计算1～100的累加之和，用while循环实现，代码如下：
"""
sum = 0
i = 1
while i <= 100:
    sum += i
    i += 1
print(sum)  # 5050
"""
注意： 语句块 中一定要有控制 条件 变化的语句，否则会变成死循环。如上面代码的条件是“i＜=100”，循环控制变量为i，在循环体中必然有变量i的值发生变化的语句，如“i+=1”。这个变量也称为程序维护计数器。在for循环结构中循环变量是逐一取自遍历结构，所以不需要程序维护计数器。
无限循环也一样，可以与保留字else进行搭配，其扩展模式语法如下：
while <条件>:
    <语句块1>
else:
    <语句块2>
在这种模式中，当while循环正常执行完成后，程序会继续执行else语句中的内容。else语句只在循环正常执行完成后才执行。因此，在 语句块2 可以放置判断循环情况的语句，代码如下：
"""
a = 'ABC'
i = 0
while i < len(a):
    print('循环进行中:'+a[i])
    i += 1
else:
    print('循环正常结束')
"""
运行结果如下：
循环进行中:A
循环进行中:B
循环进行中:C
循环正常结束
"""